<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 800 700">
  <!-- タイトル -->
  <text x="400" y="30" font-family="Arial" font-size="20" text-anchor="middle" font-weight="bold">React Router v7: フォームサブミットフロー</text>
  
  <!-- エンティティ -->
  <rect x="50" y="70" width="120" height="60" rx="10" ry="10" fill="#d5e8d4" stroke="#82b366" stroke-width="2"/>
  <text x="110" y="105" font-family="Arial" font-size="14" text-anchor="middle">ユーザー/UI</text>
  
  <rect x="250" y="70" width="120" height="60" rx="10" ry="10" fill="#dae8fc" stroke="#6c8ebf" stroke-width="2"/>
  <text x="310" y="105" font-family="Arial" font-size="14" text-anchor="middle">Router API</text>
  
  <rect x="450" y="70" width="120" height="60" rx="10" ry="10" fill="#f8cecc" stroke="#b85450" stroke-width="2"/>
  <text x="510" y="105" font-family="Arial" font-size="14" text-anchor="middle">アクション実行</text>
  
  <rect x="650" y="70" width="120" height="60" rx="10" ry="10" fill="#e1d5e7" stroke="#9673a6" stroke-width="2"/>
  <text x="710" y="105" font-family="Arial" font-size="14" text-anchor="middle">レンダリング</text>
  
  <!-- ライフライン -->
  <line x1="110" y1="130" x2="110" y2="680" stroke="#82b366" stroke-width="2" stroke-dasharray="5,5"/>
  <line x1="310" y1="130" x2="310" y2="680" stroke="#6c8ebf" stroke-width="2" stroke-dasharray="5,5"/>
  <line x1="510" y1="130" x2="510" y2="680" stroke="#b85450" stroke-width="2" stroke-dasharray="5,5"/>
  <line x1="710" y1="130" x2="710" y2="680" stroke="#9673a6" stroke-width="2" stroke-dasharray="5,5"/>
  
  <!-- ステップ1: フォームサブミット -->
  <rect x="80" y="150" width="60" height="30" rx="5" ry="5" fill="#d5e8d4" stroke="#82b366" stroke-width="2"/>
  <text x="110" y="170" font-family="Arial" font-size="12" text-anchor="middle">Form送信</text>
  
  <line x1="140" y1="165" x2="280" y2="165" stroke="#000000" stroke-width="1.5" marker-end="url(#arrow)"/>
  <text x="210" y="155" font-family="Arial" font-size="11" text-anchor="middle">1. preventDefault()</text>
  
  <!-- ステップ2: 状態更新 -->
  <rect x="280" y="180" width="60" height="30" rx="5" ry="5" fill="#dae8fc" stroke="#6c8ebf" stroke-width="2"/>
  <text x="310" y="200" font-family="Arial" font-size="12" text-anchor="middle">navigate()</text>
  
  <path d="M 310 210 Q 310 230 340 230 Q 370 230 370 250 Q 370 270 340 270" fill="none" stroke="#000000" stroke-width="1.5" marker-end="url(#arrow)"/>
  <text x="385" y="250" font-family="Arial" font-size="11" text-anchor="left">2. state.navigation = 'submitting'</text>
  
  <!-- ステップ3: フォームデータ準備 -->
  <rect x="280" y="270" width="60" height="30" rx="5" ry="5" fill="#dae8fc" stroke="#6c8ebf" stroke-width="2"/>
  <text x="310" y="290" font-family="Arial" font-size="12" text-anchor="middle">データ準備</text>
  
  <line x1="340" y1="285" x2="480" y2="285" stroke="#000000" stroke-width="1.5" marker-end="url(#arrow)"/>
  <text x="410" y="275" font-family="Arial" font-size="11" text-anchor="middle">3. FormData準備</text>
  
  <!-- ステップ4: アクションマッチング -->
  <rect x="480" y="300" width="60" height="30" rx="5" ry="5" fill="#f8cecc" stroke="#b85450" stroke-width="2"/>
  <text x="510" y="320" font-family="Arial" font-size="12" text-anchor="middle">マッチング</text>
  
  <path d="M 510 330 Q 510 350 480 350 Q 450 350 450 370 Q 450 390 480 390" fill="none" stroke="#000000" stroke-width="1.5" marker-end="url(#arrow)"/>
  <text x="440" y="370" font-family="Arial" font-size="11" text-anchor="middle">4. action関数特定</text>
  
  <!-- ステップ5: Lazy Loading -->
  <rect x="480" y="390" width="60" height="30" rx="5" ry="5" fill="#f8cecc" stroke="#b85450" stroke-width="2"/>
  <text x="510" y="410" font-family="Arial" font-size="12" text-anchor="middle">Lazy Load</text>
  
  <line x1="480" y1="405" x2="340" y2="405" stroke="#000000" stroke-width="1.5" marker-end="url(#arrow)"/>
  <text x="410" y="395" font-family="Arial" font-size="11" text-anchor="middle">5. 必要なら動的モジュール読込</text>
  
  <!-- ステップ6: Single Fetch (Action) -->
  <rect x="480" y="430" width="60" height="30" rx="5" ry="5" fill="#f8cecc" stroke="#b85450" stroke-width="2"/>
  <text x="510" y="450" font-family="Arial" font-size="12" text-anchor="middle">Single Fetch</text>
  
  <path d="M 510 460 Q 510 480 540 480 Q 570 480 570 500 Q 570 520 540 520" fill="none" stroke="#000000" stroke-width="1.5" marker-end="url(#arrow)"/>
  <text x="585" y="500" font-family="Arial" font-size="11" text-anchor="left">6. POST /path.data FormDataを送信</text>
  
  <!-- ステップ7: Action実行 -->
  <rect x="480" y="520" width="60" height="30" rx="5" ry="5" fill="#f8cecc" stroke="#b85450" stroke-width="2"/>
  <text x="510" y="540" font-family="Arial" font-size="12" text-anchor="middle">Action実行</text>
  
  <line x1="540" y1="535" x2="680" y2="535" stroke="#000000" stroke-width="1.5" marker-end="url(#arrow)"/>
  <text x="610" y="525" font-family="Arial" font-size="11" text-anchor="middle">7. state.actionData更新</text>
  
  <!-- ステップ8: Revalidation -->
  <rect x="480" y="560" width="60" height="30" rx="5" ry="5" fill="#f8cecc" stroke="#b85450" stroke-width="2"/>
  <text x="510" y="580" font-family="Arial" font-size="12" text-anchor="middle">Revalidation</text>
  
  <path d="M 510 590 Q 510 610 540 610 Q 570 610 570 630 Q 570 650 540 650" fill="none" stroke="#000000" stroke-width="1.5" marker-end="url(#arrow)"/>
  <text x="585" y="630" font-family="Arial" font-size="11" text-anchor="left">8. 関連loaderを再実行</text>
  
  <!-- ステップ9: レンダリング -->
  <rect x="680" y="560" width="60" height="30" rx="5" ry="5" fill="#e1d5e7" stroke="#9673a6" stroke-width="2"/>
  <text x="710" y="580" font-family="Arial" font-size="12" text-anchor="middle">再レンダリング</text>
  
  <line x1="680" y1="575" x2="140" y2="575" stroke="#000000" stroke-width="1.5" marker-end="url(#arrow)"/>
  <text x="410" y="565" font-family="Arial" font-size="11" text-anchor="middle">9. 更新済みデータで表示</text>
  
  <!-- ステップ10: 完了 -->
  <rect x="280" y="640" width="60" height="30" rx="5" ry="5" fill="#dae8fc" stroke="#6c8ebf" stroke-width="2"/>
  <text x="310" y="660" font-family="Arial" font-size="12" text-anchor="middle">完了</text>
  
  <line x1="280" y1="655" x2="140" y2="655" stroke="#000000" stroke-width="1.5" marker-end="url(#arrow)"/>
  <text x="210" y="645" font-family="Arial" font-size="11" text-anchor="middle">10. state.navigation = 'idle'</text>
  
  <!-- 注釈 -->
  <rect x="100" y="430" width="180" height="90" rx="5" ry="5" fill="#fff2cc" stroke="#d6b656" stroke-width="1"/>
  <text x="190" y="450" font-family="Arial" font-size="12" text-anchor="middle">Actionからの応答処理:</text>
  <text x="190" y="470" font-family="Arial" font-size="11" text-anchor="middle">- リダイレクトの場合: 新URLに遷移</text>
  <text x="190" y="490" font-family="Arial" font-size="11" text-anchor="middle">- エラーの場合: エラーバウンダリ表示</text>
  <text x="190" y="510" font-family="Arial" font-size="11" text-anchor="middle">- 成功の場合: データ更新と再検証</text>
  
  <rect x="600" y="390" width="180" height="70" rx="5" ry="5" fill="#fff2cc" stroke="#d6b656" stroke-width="1"/>
  <text x="690" y="410" font-family="Arial" font-size="12" text-anchor="middle">Revalidation:</text>
  <text x="690" y="430" font-family="Arial" font-size="11" text-anchor="middle">- データ変更後に自動実行</text>
  <text x="690" y="450" font-family="Arial" font-size="11" text-anchor="middle">- shouldRevalidateで制御可能</text>
  
  <!-- マーカー定義 -->
  <defs>
    <marker id="arrow" markerWidth="10" markerHeight="10" refX="9" refY="3" orient="auto">
      <path d="M0,0 L0,6 L9,3 z" fill="#000000"/>
    </marker>
  </defs>
</svg>